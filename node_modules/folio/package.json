{
  "author": {
    "name": "Jake Luer",
    "email": "@jakeluer"
  },
  "name": "folio",
  "description": "Tiny static javascript build and serve utility.",
  "version": "0.2.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/logicalparadox/folio"
  },
  "main": "index",
  "engines": {
    "node": ">= v0.4.8"
  },
  "scripts": {},
  "dependencies": {
    "uglify-js": "1.2.x",
    "async": "0.1.x"
  },
  "devDependencies": {
    "connect": "*",
    "superagent": "0.3.x",
    "mocha": "*",
    "chai": "*"
  },
  "readme": "# Folio\n\nFolio is for simple aggregation and serving of client-side javascript libraries. \nUse as a build tool for client-side libraries or aggregrate you client-side JS for \nserving via express.\n\n#### Examples\n\n* [Backbone.ioBind](https://github.com/logicalparadox/backbone.iobind) uses Folio to\nbuild its distributions. Checkout the [Jakefile](https://github.com/logicalparadox/backbone.iobind/blob/master/Jakefile.js)\n\n## Features\n\n### Aggregation\n\nFolio can be used for creating asyncronous builds of client files for javascript.\n\n```js\nvar path = require('path'),\n    fs = require('fs'),\n    folio = require('folio');\n\n// normal output\nvar glossary = new folio.glossary([\n  path.join(__dirname, 'assets', 'first.js'),\n  path.join(__dirname, 'assets', 'second.js')\n], { minify: true });\n\n// build tasks\nglossary.compile(function(err, source) {\n  fs.writeFileSync('assets.min.js', source);\n});\n```\n\n### Serve files with Express\n\nThe same binding can easily be served using express.\n\n```js\nvar server = require('express').createServer();\n\nserver.get('/assets.min.js', folio.serve(glossary));\n\nserver.listen(8000);\n```\n\n## Testing\n\nTests are built on [vows](http://vowsjs.org).\n\n`$ vows test/*.test.js --spec`\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 Jake Luer <jake@alogicalparadox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/logicalparadox/folio/issues"
  },
  "_id": "folio@0.2.1",
  "dist": {
    "shasum": "4b4e8aab1ea6c84c9c57800b51d9993a3d72cb7a"
  },
  "_from": "folio@0.2.x",
  "_resolved": "https://registry.npmjs.org/folio/-/folio-0.2.1.tgz"
}
